DROP DATABASE IF EXISTS workplanning;

CREATE DATABASE workplanning
CHARACTER SET utf8mb4
COLLATE utf8mb4_vietnamese_ci;

USE workplanning;

-- 1. NGUOI_DUNG_CA_NHAN
CREATE TABLE NGUOI_DUNG_CA_NHAN (
  ID_USER      CHAR(8)       PRIMARY KEY,
  MAT_KHAU     VARCHAR(100)  NOT NULL,
  HO_TEN       VARCHAR(100)  NOT NULL,
  NGAY_SINH    DATE,
  GIOI_TINH    VARCHAR(10),
  EMAIL        VARCHAR(100)  NOT NULL UNIQUE
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_generate_id_user
BEFORE INSERT ON nguoi_dung_ca_nhan
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_USER, 5) AS UNSIGNED)), 0)
  INTO max_id
  FROM nguoi_dung_ca_nhan;

  SET NEW.ID_USER = CONCAT('NDCN', LPAD(max_id + 1, 4, '0'));
END$$
DELIMITER ;

-- 2. PHAN_HOI
CREATE TABLE PHAN_HOI (
  ID_PH        CHAR(8)       PRIMARY KEY,
  NOI_DUNG     TEXT,
  ID_USER      CHAR(8)       NOT NULL,
  FOREIGN KEY(ID_USER) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER)
) ENGINE=InnoDB;

DELIMITER $$

CREATE TRIGGER trg_ph_insert
BEFORE INSERT ON PHAN_HOI
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_PH, 3) AS UNSIGNED)), 0)
  INTO max_id
  FROM PHAN_HOI;

  SET NEW.ID_PH = CONCAT('PH', LPAD(max_id + 1, 6, '0'));
END$$
DELIMITER ;

-- 3. ROLE
CREATE TABLE ROLE (
  ID_ROLE      CHAR(8)       PRIMARY KEY,
  TEN_ROLE     VARCHAR(50)   NOT NULL
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_r_insert
BEFORE INSERT ON ROLE
FOR EACH ROW
BEGIN
  DECLARE max_id INT;

  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_ROLE, 5) AS UNSIGNED)), 0)
  INTO max_id
  FROM ROLE;

  SET NEW.ID_ROLE = CONCAT('ROLE', LPAD(max_id + 1, 4, '0'));
END$$
DELIMITER ;

-- 4. ROLE_MAPPING (User â†” Role)
CREATE TABLE ROLE_MAPPING (
  ID_USER      CHAR(8)      NOT NULL,
  ID_ROLE      CHAR(8)      NOT NULL,
  PRIMARY KEY(ID_USER, ID_ROLE),
  FOREIGN KEY(ID_USER) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER),
  FOREIGN KEY(ID_ROLE) REFERENCES ROLE(ID_ROLE)
) ENGINE=InnoDB;

-- 5. THONG_BAO
CREATE TABLE THONG_BAO (
  ID_TB         CHAR(8)       PRIMARY KEY,
  THOI_GIAN_GUI DATETIME
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_tb_insert
BEFORE INSERT ON THONG_BAO
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_TB, 3) AS UNSIGNED)), 0)
  INTO max_id
  FROM THONG_BAO;

  SET NEW.ID_TB = CONCAT('TB', LPAD(max_id + 1, 6, '0'));
END$$
DELIMITER ;

-- 6. THONG_BAO_NGUOI_DUNG
CREATE TABLE THONG_BAO_NGUOI_DUNG (
  ID_TBUD      CHAR(8)       PRIMARY KEY,
  ID_TB        CHAR(8)       NOT NULL,
  ID_USER      CHAR(8)       NOT NULL,
  NOI_DUNG     TEXT,
  FOREIGN KEY(ID_TB)   REFERENCES THONG_BAO(ID_TB),
  FOREIGN KEY(ID_USER) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER)
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_tbud_insert
BEFORE INSERT ON THONG_BAO_NGUOI_DUNG
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_TBUD, 5) AS UNSIGNED)), 0)
  INTO max_id
  FROM THONG_BAO_NGUOI_DUNG;

  SET NEW.ID_TBUD = CONCAT('TBND', LPAD(max_id + 1, 4, '0'));
END$$
DELIMITER ;

-- 7. CAU_HINH_THONG_BAO
CREATE TABLE CAU_HINH_THONG_BAO (
  ID_CAUHINH    CHAR(8)       PRIMARY KEY,
  THOI_GIAN_TRUOC_HAN DATE, 
  NOI_DUNG_TB   TEXT
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_ch_insert
BEFORE INSERT ON CAU_HINH_THONG_BAO
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_CAUHINH, 5) AS UNSIGNED)), 0)
  INTO max_id
  FROM CAU_HINH_THONG_BAO;

  SET NEW.ID_CAUHINH = CONCAT('CHTB', LPAD(max_id + 1, 4, '0'));
END$$
DELIMITER ;

-- 8. NHOM_LAM_VIEC
CREATE TABLE NHOM_LAM_VIEC (
  ID_NHOM      CHAR(8)       PRIMARY KEY,
  ID_NHOM_TRUONG CHAR(8),
  NGAY_TAO     DATETIME,
  MO_TA_NHOM   VARCHAR(255),
  TEN_NHOM     VARCHAR(100),
  FOREIGN KEY(ID_NHOM_TRUONG) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER)
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_nlv_insert
BEFORE INSERT ON NHOM_LAM_VIEC
FOR EACH ROW
BEGIN
  DECLARE max_id INT;

  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_NHOM, 4) AS UNSIGNED)), 0)
  INTO max_id
  FROM NHOM_LAM_VIEC;

  SET NEW.ID_NHOM = CONCAT('NLV', LPAD(max_id + 1, 5, '0'));
END$
DELIMITER ;

-- 9. NHOM_THANH_VIEN
CREATE TABLE NHOM_THANH_VIEN (
  ID_NHOM      CHAR(8)       NOT NULL,
  ID_USER      CHAR(8)       NOT NULL,
  PRIMARY KEY(ID_USER, ID_NHOM),
  FOREIGN KEY(ID_NHOM) REFERENCES NHOM_LAM_VIEC(ID_NHOM),
  FOREIGN KEY(ID_USER) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER)
) ENGINE=InnoDB;

-- 10. MAU_KE_HOACH
CREATE TABLE MAU_KE_HOACH (
  ID_MAU       CHAR(8)       PRIMARY KEY,
  TEN_MAU      VARCHAR(100)  NOT NULL,
  NGUOI_TAO    CHAR(8)       NOT NULL,
  FOREIGN KEY(NGUOI_TAO) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER)
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_mkh_insert
BEFORE INSERT ON MAU_KE_HOACH
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_MAU, 4) AS UNSIGNED)), 0)
  INTO max_id
  FROM MAU_KE_HOACH;

  SET NEW.ID_MAU = CONCAT('MKH', LPAD(max_id + 1, 5, '0'));
END$$
DELIMITER ;

-- 11. KE_HOACH
CREATE TABLE KE_HOACH (
  ID_KH        CHAR(8)       PRIMARY KEY,
  TEN_KE_HOACH VARCHAR(100),
  NGUOI_TAO    CHAR(8)       NOT NULL,
  FOREIGN KEY(NGUOI_TAO) REFERENCES NGUOI_DUNG_CA_NHAN(ID_USER)
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_kh_insert
BEFORE INSERT ON KE_HOACH
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_KH, 3) AS UNSIGNED)), 0)
  INTO max_id
  FROM KE_HOACH;

  SET NEW.ID_KH = CONCAT('KH', LPAD(max_id + 1, 6, '0'));
END$$
DELIMITER ;

-- 12. CONG_VIEC
CREATE TABLE CONG_VIEC (
  ID_CV        CHAR(8)       PRIMARY KEY,
  ID_KH        CHAR(8),
  ID_CAUHINH   CHAR(8),
  TRANG_THAI_CV VARCHAR(50),
  NOI_DUNG_CV  TEXT,
  TIME_START   DATETIME,
  TIME_END     DATETIME,
  TIEN_DO      DECIMAL(5,2),
  DO_UU_TIEN   INT,
  FOREIGN KEY(ID_KH)      REFERENCES KE_HOACH(ID_KH),
  FOREIGN KEY(ID_CAUHINH) REFERENCES CAU_HINH_THONG_BAO(ID_CAUHINH)
) ENGINE=InnoDB;

DELIMITER $$
CREATE TRIGGER trg_cv_insert
BEFORE INSERT ON CONG_VIEC
FOR EACH ROW
BEGIN
  DECLARE max_id INT;
  SELECT IFNULL(MAX(CAST(SUBSTRING(ID_CV, 3) AS UNSIGNED)), 0)
  INTO max_id
  FROM CONG_VIEC;

  SET NEW.ID_CV = CONCAT('CV', LPAD(max_id + 1, 6, '0'));
END$$
DELIMITER ;
